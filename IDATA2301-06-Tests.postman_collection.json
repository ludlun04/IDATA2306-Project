{
	"info": {
		"_postman_id": "2890dc99-1f30-4c5d-a6da-633614cde8d7",
		"name": "IDATA2301-06-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27024266"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check that the statuscode is correct\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"});\r",
									"\r",
									"pm.environment.set(\"jwt_token\", pm.response.text())"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"user\",\r\n    \"password\":\"yes\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/authenticate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token with null body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check that the statuscode is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/authenticate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token With Incorrect Username or Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check that the statuscode is 401\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(401)\r",
									"});\r",
									"\r",
									"pm.test(\"Body says incorrect username or password\", function () {\r",
									"    pm.expect(pm.response.text()).to.equal(\"Incorrect username or password\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"user2\",\r\n    \"password\":\"yes2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/authenticate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cars",
			"item": [
				{
					"name": "Get All Cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cars",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cars"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "Get All Companies",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/company",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/company/0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add user to company",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/company/0/user/0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company",
								"0",
								"user",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users In Company",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/company/0/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company",
								"0",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users In Company Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/company/0/user/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company",
								"0",
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users In Company Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/company/0/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company",
								"0",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": []
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\" : \"JohnDoe\",\r\n   \"password\" : \"Okay\",\r\n   \"firstName\" : \"John\",\r\n   \"lastName\" : \"Doe\",\r\n   \"dateOfBirth\" : 21290124,\r\n   \"email\" : \"yes@yes.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"add"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}